import numpy as np
from numpy import exp, dot, random
from sklearn.metrics import accuracy_score
from sklearn import preprocessing

def concatenate(arr1, arr2):
   for i in range(0, len(arr1)): #must besame size as arr2
      arr1[i] = arr1[i] * arr2[i]
      
   return arr1
   
def getPositiveAccuracy(temp):
   total = 0
   right = 0
   for i in range(dataSplit,dataSplit+len(temp)): 
      tempIndex = (i-dataSplit)
      if(resultY[i] == 1): 
         total = total + 1
         if(temp[tempIndex] == 1): 
            right = right + 1      
   return float(right)/float(total)
   
def getNegativeAccuracy(temp):
   total = 0
   right = 0
   for i in range(dataSplit,dataSplit+len(temp)): 
      tempIndex = (i-dataSplit)
      if(resultY[i] == 0): 
         total = total + 1
         if(temp[tempIndex] == 0): 
            right = right + 1      
   return float(right)/float(total)


class NeuralNetwork(): 
   def __init__(self, featureSize): 
      random.seed(1)
      self.weights = random.random((featureSize,1))
      
   def sigmoid(self, x):   
      return 1/(1+exp(-x))
   
   def derivative_sigmoid(self, x):
      return (x*(1-x))
   
   def train(self, inputs, outputs, iters): 
      for it in range(iters): 
         guess = self.think(inputs)
         error = outputs-guess
         adjust = dot(inputs.T, error*self.derivative_sigmoid(guess))
         self.weights+=adjust
   
   def think(self, inputs): 
      return self.sigmoid(dot(inputs, self.weights))
      

if __name__ == '__main__':
   biRads = "5,5,4,5,5,3,4,4,4,3,4,4,5,5,4,5,5,5,4,5,5,4,4,4,5,4,4,4,5,5,5,4,5,4,5,5,4,5,4,4,4,4,5,5,5,4,5,4,5,5,4,5,3,5,5,4,4,5,5,5,4,4,4,5,5,4,4,5,5,5,4,4,5,4,5,5,5,5,5,5,4,5,4,5,5,4,4,5,5,4,4,5,5,4,4,3,4,5,4,4,4,5,4,4,5,5,4,4,4,4,5,4,5,5,4,5,4,4,5,5,5,5,4,5,5,4,4,5,4,5,4,4,4,3,4,2,4,5,4,4,4,4,5,5,4,4,4,3,3,4,5,5,5,4,5,4,4,3,5,5,4,5,5,4,4,4,5,4,4,3,5,4,4,5,4,3,4,5,4,4,5,5,5,5,5,5,4,4,5,4,5,3,5,5,5,5,5,2,4,5,5,4,5,4,4,4,4,4,4,5,5,5,4,5,4,4,5,4,4,5,5,4,3,4,4,2,4,4,4,4,5,4,4,4,4,4,4,4,4,5,4,5,4,4,4,4,4,5,5,4,5,5,4,5,5,5,4,55,5,4,4,4,5,4,5,5,4,5,4,4,5,4,4,4,5,4,5,4,5,3,4,4,5,5,4,5,4,5,4,5,5,4,4,5,5,4,4,4,4,5,5,4,4,5,5,4,3,5,4,5,5,5,5,5,3,4,5,5,4,5,4,5,5,5,4,5,5,5,4,4,4,5,5,5,4,5,5,4,5,4,4,5,4,5,5,4,5,5,5,4,4,5,4,4,5,5,5,4,4,4,4,5,4,5,4,4,5,5,4,5,4,5,4,4,4,4,4,5,4,5,4,4,4,4,4,4,4,5,4,5,5,4,5,5,4,4,5,5,4,4,4,4,5,5,5,5,4,4,5,4,5,3,4,5,4,5,4,2,5,5,5,5,5,4,4,4,5,4,4,4,3,4,4,5,4,4,5,4,5,6,3,4,4,4,4,5,4,5,5,4,4,5,5,4,4,4,4,4,4,4,5,4,4,5,4,4,4,4,5,4,4,5,4,5,5,5,4,5,5,5,5,4,5,4,4,5,4,4,4,5,5,4,4,5,5,5,5,5,4,5,4,5,4,4,4,4,5,4,5,5,4,4,4,4,5,5,4,5,4,4,4,5,4,4,5,4,4,4,5,4,4,5,4,5,4,4,4,5,5,4,2,5,5,6,5,4,5,4,5,5,5,4,5,5,5,5,4,4,4,4,5,5,5,4,5,5,4,6,4,4,4,4,4,4,5,4,4,4,4,4,5,4,6,4,4,4,4,4,5,4,4,4,6,6,4,4,4,5,5,4,5,5,4,4,4,5,4,4,3,4,4,4,4,4,4,4,4,4,4,5,4,5,4,4,4,5,4,4,5,5,5,5,4,5,5,5,4,5,4,4,4,5,4,2,5,4,4,3,4,4,4,4,3,5,4,6,4,4,4,4,4,4,4,4,4,3,5,5,5,4,5,5,4,4,4,5,5,4,5,4,5,5,5,4,4,4,4,4,4,5,4,4,4,4,5,5,4,4,5,4,6,5,4,5,4,4,4,4,4,4,5,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,5,5,5,5,4,5,4,5,4,2,4,5,4,5,4,4,4,4,3,5,4,4,5,4,3,4,4,5,5,6,5,4,4,4,4,4,5,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,4,4,4,4,5,4,4,4,4,4,4,4,5"
   age = "67,58,28,57,76,42,36,60,54,52,59,54,56,42,59,75,45,55,46,54,57,39,81,60,67,55,78,50,62,64,67,74,80,49,52,60,57,74,49,45,64,73,68,52,66,25,74,64,60,67,67,44,68,58,62,73,80,59,54,62,33,57,45,71,59,56,57,55,84,51,24,66,33,59,40,67,75,86,66,46,59,65,53,67,80,55,47,62,63,71,41,57,71,66,47,34,59,67,41,23,42,87,68,64,54,86,21,53,44,54,63,45,71,49,49,66,19,35,74,37,81,59,34,79,60,41,50,85,46,66,73,55,49,49,51,48,58,72,46,43,46,69,43,76,46,59,57,45,43,45,57,79,54,40,63,52,38,72,80,76,62,64,42,64,63,24,72,63,46,33,76,36,40,58,43,42,32,57,37,70,56,73,77,67,71,65,43,49,76,55,72,53,75,61,67,55,66,76,57,71,70,63,40,41,47,68,64,73,39,55,53,66,43,44,77,62,80,33,50,46,49,53,46,57,54,49,47,40,45,50,54,67,77,66,36,69,48,64,71,60,24,34,79,45,37,42,72,60,85,51,54,55,64,67,75,87,46,46,61,44,32,62,59,61,78,42,45,34,27,43,83,36,37,56,55,88,71,41,49,51,39,46,52,58,67,80,45,68,44,74,55,49,49,50,52,45,66,68,72,74,58,77,49,60,69,53,46,74,58,68,46,61,70,37,65,67,69,76,65,72,62,42,66,48,35,60,67,78,66,48,31,43,72,66,56,58,33,37,36,39,39,83,68,63,78,38,46,60,56,33,69,66,72,29,54,80,68,35,50,32,71,87,64,55,18,53,84,80,32,77,38,54,63,61,52,36,59,51,36,40,49,37,46,63,28,47,42,44,49,47,52,53,83,63,54,50,80,45,28,31,41,21,44,49,71,75,38,60,87,70,55,21,50,76,23,73,38,57,65,67,61,56,71,49,44,27,73,34,50,62,21,36,45,67,21,57,66,71,69,80,27,38,23,46,61,65,60,83,40,53,76,79,38,61,56,44,66,50,46,39,55,40,26,84,41,63,49,56,65,54,36,49,59,75,59,59,28,53,57,77,85,59,59,65,54,46,63,53,56,66,66,55,44,86,47,59,66,61,69,93,39,44,45,51,56,66,61,64,57,79,44,31,63,64,47,68,30,43,56,46,67,52,67,47,58,28,43,57,68,64,64,62,38,68,41,35,68,55,67,51,40,73,59,60,54,56,53,54,79,67,64,70,55,65,45,49,24,52,50,35,64,40,66,64,52,43,56,51,79,22,73,53,59,46,66,50,58,55,62,60,57,57,41,71,32,57,19,62,67,50,65,40,71,68,68,29,53,66,76,58,96,70,34,59,45,65,59,21,43,53,65,64,53,51,59,56,60,22,25,69,58,62,56,64,32,59,52,63,67,61,59,52,35,77,71,63,38,72,76,53,67,69,54,35,68,68,67,39,44,33,58,31,23,56,69,63,65,44,62,67,56,52,43,41,42,46,55,58,87,66,60,83,31,53,64,31,62,56,58,67,75,65,74,59,57,76,63,44,42,65,70,48,74,63,60,86,27,71,85,51,72,52,66,71,42,64,41,50,30,67,62,46,35,53,59,19,86,72,37,46,45,48,58,42,56,47,49,76,62,64,53,70,55,34,76,39,23,19,65,57,41,36,62,69,41,51,50,47,54,52,30,48,65,50,65,66,41,72,42,80,41,72,60,67,55,61,55,52,42,63,62,46,65,57,66,45,77,35,50,57,74,59,51,42,35,42,43,62,27,57,59,40,20,74,22,57,57,55,62,54,71,65,68,64,54,48,58,58,70,70,59,57,53,54,53,67,68,56,35,52,47,56,64,66"
   shape = "3,4,1,1,1,2,3,2,1,3,2,1,4,4,2,4,4,4,1,4,4,1,1,2,3,3,1,1,3,4,4,2,3,2,4,4,2,4,1,2,2,2,4,4,4,1,1,1,4,2,4,4,1,4,1,3,4,2,4,4,2,1,4,4,4,1,2,3,4,4,2,1,4,4,4,4,4,4,4,4,4,4,1,3,4,2,1,4,4,4,1,4,4,1,2,4,3,4,2,3,2,4,1,1,3,4,2,4,4,1,4,2,4,4,4,4,1,1,4,4,3,4,1,4,3,1,1,4,1,4,3,1,2,4,4,4,4,4,2,4,1,3,2,4,1,2,1,2,2,2,4,4,2,3,4,2,1,4,4,4,3,4,4,4,4,2,4,2,1,1,4,2,2,1,2,1,1,4,1,4,4,4,4,4,4,4,1,2,4,4,4,4,4,4,4,4,4,1,4,3,4,2,1,1,2,1,4,4,4,4,3,4,3,4,4,2,4,4,4,4,4,1,2,1,3,2,3,1,1,4,4,4,4,4,2,4,1,4,4,4,1,4,1,1,2,1,4,4,3,1,4,4,4,4,4,4,4,4,1,1,1,1,4,4,4,4,1,2,3,1,4,2,2,3,4,4,4,2,4,1,1,2,4,4,4,4,1,4,2,4,4,4,1,4,3,1,1,4,2,4,4,2,3,4,4,2,3,4,1,4,4,2,4,4,4,4,3,4,4,4,4,4,4,4,1,4,4,4,1,1,1,4,2,1,4,4,2,1,4,2,4,4,4,3,4,2,4,4,2,1,1,1,1,1,4,4,4,2,1,4,4,4,1,4,1,1,4,4,1,3,1,4,1,1,1,1,1,4,1,4,1,2,1,1,2,2,2,4,4,4,4,1,3,4,1,4,4,2,2,1,2,3,3,4,4,4,2,1,4,4,4,1,1,4,1,4,2,1,4,2,2,4,2,2,2,2,4,2,2,2,3,3,2,4,1,2,4,4,3,4,2,2,2,4,2,4,4,4,4,3,4,1,2,3,2,2,3,3,1,1,4,2,1,3,2,1,1,2,4,1,1,4,4,4,4,4,4,4,4,4,4,4,1,3,2,4,4,1,1,4,4,1,1,3,4,4,4,4,1,1,1,4,2,3,2,4,4,3,2,4,4,2,4,1,4,4,1,4,1,2,2,4,4,2,4,2,1,2,4,2,2,4,4,4,2,2,2,4,4,4,1,4,4,3,4,1,4,2,1,4,3,1,4,3,4,1,2,1,2,1,4,4,4,4,4,1,4,4,4,2,2,3,2,4,4,4,1,1,2,1,4,1,2,2,2,2,1,2,4,4,2,2,4,4,1,1,2,4,4,2,3,4,2,2,3,4,1,2,2,1,2,2,4,1,2,2,2,1,2,4,2,4,4,1,2,4,1,4,4,4,4,4,4,3,4,4,2,4,4,3,4,2,1,2,4,4,2,1,2,1,1,1,1,4,2,1,1,2,3,4,2,3,1,4,3,1,4,4,4,2,4,4,2,2,2,4,4,2,4,1,4,3,3,2,4,3,1,1,3,4,2,1,1,1,4,4,1,4,4,3,4,4,2,4,2,4,2,2,1,1,4,2,1,1,2,3,2,2,2,3,1,4,4,1,2,2,4,2,4,4,4,4,4,4,4,1,1,1,4,2,4,4,3,2,3,2,3,4,4,4,1,4,2,1,4,4,3,3,1,4,1,3,4,4,2,3,3,4,1,4,4,1,2,3,4,1,4,1,4,4,3,4,1,3,2,1,2,4,2,4,2,3,1,4,1,4,4,2,2,1,1,3,4,1,2,4,4,3,1,1,2,2,4,4,2,4,4,2,2,4,2,4,4,4"
   margin = "5,5,1,5,4,1,1,1,1,4,1,1,3,4,4,5,5,4,5,4,4,1,1,1,4,4,1,1,5,5,5,1,5,1,3,3,5,4,1,1,1,1,3,5,4,1,1,1,3,4,5,4,1,4,5,4,4,1,4,4,1,1,4,4,4,1,1,4,5,4,1,1,4,3,5,4,3,4,4,5,4,4,1,5,5,1,1,5,4,4,1,4,4,1,4,4,4,4,1,1,1,5,1,1,5,5,1,4,4,1,5,1,5,4,4,4,1,1,5,4,4,4,1,3,1,1,1,4,1,4,1,1,1,4,5,4,5,5,3,3,1,1,1,5,1,4,1,1,1,1,5,4,1,4,4,1,1,3,3,3,1,5,5,5,4,1,4,1,1,1,4,3,1,5,1,1,1,4,1,4,2,4,5,4,3,4,1,1,2,4,5,3,4,5,4,2,4,1,4,1,5,1,4,1,1,1,3,3,3,5,4,4,1,5,4,4,4,4,5,4,5,1,1,1,1,1,1,1,1,5,4,1,4,3,3,4,1,4,2,3,1,5,1,1,1,1,4,5,5,1,5,3,4,5,3,4,4,3,1,4,1,1,5,1,4,5,2,1,1,1,4,1,1,1,4,4,4,1,4,1,3,1,4,4,5,4,1,4,3,3,5,4,1,3,5,1,1,4,1,4,4,3,1,3,3,1,4,4,1,4,3,4,3,4,5,4,4,4,3,2,2,4,3,4,1,4,2,4,1,1,1,3,4,1,4,5,4,1,3,3,4,4,5,4,4,3,3,4,3,1,5,4,3,1,5,4,3,1,1,3,5,5,1,5,1,1,5,3,1,4,1,5,1,1,1,1,1,4,1,3,1,3,1,1,1,1,1,5,4,5,5,1,3,4,1,4,5,4,1,1,1,1,4,4,5,5,1,3,5,4,5,1,1,5,1,5,3,1,5,4,4,4,4,2,1,1,5,1,1,1,1,1,1,5,1,1,5,4,4,5,1,1,1,3,3,5,3,5,4,4,4,4,4,4,1,1,3,3,1,1,5,1,1,2,2,1,1,2,4,1,1,4,4,4,2,4,4,5,4,3,3,4,5,3,1,5,4,1,1,4,5,1,1,4,5,5,5,3,1,5,3,5,2,4,4,4,5,3,4,4,1,1,4,1,5,5,1,5,1,1,1,5,4,1,5,1,1,4,5,4,4,4,1,4,1,1,1,4,4,3,1,4,3,5,3,1,5,4,4,3,3,2,3,3,2,1,1,1,1,1,3,1,4,4,3,4,4,4,4,1,1,4,1,4,4,3,1,1,4,1,3,1,1,1,1,1,1,4,5,5,3,4,4,3,1,1,1,4,4,1,4,4,1,1,1,4,1,1,1,1,1,4,4,1,4,1,1,1,1,4,1,3,4,1,1,4,1,4,4,4,5,3,4,3,3,3,1,3,3,3,5,4,1,1,3,4,4,1,1,1,1,1,1,5,1,1,1,1,3,4,1,4,1,3,4,1,4,4,4,1,3,4,1,1,3,4,4,1,4,4,5,4,2,1,4,2,4,1,1,3,1,1,1,1,4,3,1,5,4,3,3,4,1,5,1,4,2,1,1,1,4,1,1,1,1,1,1,1,1,1,1,5,4,1,4,1,4,5,5,4,3,2,4,4,4,1,1,1,5,1,4,5,3,1,1,4,2,4,5,4,1,4,4,1,5,3,3,2,1,4,1,3,5,3,1,4,4,4,1,4,5,1,1,3,5,1,5,1,5,4,1,5,1,4,4,1,1,4,1,4,1,2,1,3,1,3,3,1,1,1,1,3,4,1,4,4,3,4,1,4,1,4,5,4,1,5,4,4,1,4,1,5,5,5"
   density = "3,3,3,3,3,3,2,2,3,3,3,3,1,3,3,3,3,3,2,3,3,2,3,3,2,2,1,3,2,3,3,2,3,1,3,3,3,3,3,3,3,2,3,3,3,3,2,3,2,1,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,4,4,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,4,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,3,3,3,3,4,4,3,2,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,3,2,3,3,3,2,3,3,3,2,2,3,3,3,3,3,3,3,4,3,3,3,2,3,3,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3"
   results = "1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0,0,1,1,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,0,1,1,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,1,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,0,1,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,1,1,1,0,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,1,0,1,0,0,1,1,1,0,1,0,0,0,1,0,1,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1,1,0,0,0,1,0,1,1,0,1,1,1,0,1,1,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,1,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,0,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1"


   biRadsArr = biRads.split(",")
   ageArr = age.split(",") 
   shapeArr = shape.split(",")
   marginArr = margin.split(",")
   densityArr = density.split(",")
   resultArr = results.split(",")


   biRadsX = map(float, biRadsArr)
   '''for i in range(len(biRadsX)): 
      if(biRadsX[i] == 4 or biRadsX[i] == 5): 
         biRadsX[i] = 1
      else: 
         biRadsX[i] = 0
   '''
   
   ageX = map(float,ageArr)
   shapeX = map(float,shapeArr)
   marginX = map(float,marginArr)
   densityX = map(float,densityArr)
   resultY = map(float,resultArr)
   allFeatures = [ageX, shapeX, marginX, densityX]
   '''
   listX = []
   for i in range(0, len(resultY)):
      listX.append([])
      for c in range(0, len(allFeatures)):
         listX[i].append(allFeatures[c][i]) #Why c and i??
      
   X = np.array(listX) 
   X = preprocessing.scale(X)  
   '''
   listY = []
   for i in range(len(resultY)): 
      listY.append([resultY[i]])
    
   y = np.array(listY)
   
   
   #n = NeuralNetwork(4)
   
   
   dataSplit = 50
   
   
   
   
   
   
   
   guesses = [1.4299830420709476, 1.0553737687280178, 0.1976441505947904, 0.6795308966538931, 0.6018632443276122, 0.7942953308436107, 1.298041849629281, 0.31748167520393145, 0.6664490089708683, 0.7190526259084816, -0.34017458147364943, 0.27176083786228655, 0.7193999455589568, 0.9189326743484698, 1.022731242217012, 0.268195541037482, -0.6550887279471596, 0.5683948883997496, 2.5939740692838518, 0.6723296404630493, -2.090509428834041, 0.22528187390265064, 0.9221980573053162, 0.6610655348789954, 1.329039795937718, 0.8098374284723565, 0.6839999109322725, 1.665866687851058, 0.7877721791169945, 1.2004929682530752, 0.6868248601333952, 0.7677041676576506, 0.24590366883585052, 0.9995417507718094, 2.2286539852741836, 0.30846152231469814, -0.8974709904733267, 1.2668423289515425, 0.7333874845281185, 0.9189326743484698, -0.037888413746646754, 3.561288399631392, 3.9960228731145175, 0.22528187390265064, 0.2974982736095285, 0.9011078107465663, 0.5795392329469334, 0.8098374284723565, 0.027464160006653193, -0.9381229125504995, 0.06198993344903814, 2.907908304148015, 0.1976441505947904, 0.24702759764727328, 0.7987039607996833, 2.79937316540033, -1.2326063922666648, 0.6669865612352359, 0.7313193372546536, 0.25531004999898843, 1.293557067894218, -0.7919514524699109, 1.6157847324840902, 0.6830760627914708, 0.6830760627914708, 3.757065913522113, -1.5657230448067427, -1.3992249349681443, 1.7891979128509836, 0.8417189251982404, 1.0726257125106797, 0.6868248601333952, -0.3682549962726105, 0.7675978139976954, 0.3538424951715639, -0.037888413746646754, 0.20531286107418062, 1.5976661582737242, 0.12071574436697774, 0.7877721791169945, -0.8524181581316048, 0.26272630957462406, 0.23899143115029248, 0.6830760627914708, 1.1529536189589007, 0.6903677939315982, 1.188257587345134, 1.6702733118097493, 0.5051025625889547, 0.5550568524047195, -2.5569616982641206, 0.2724080293834392, 0.09411955864213739, 1.9216730602436038, 0.12071574436697774, 0.5378688256685867, 0.27176083786228655, 0.1513627381793753, 0.09411955864213739, 0.1513627381793753, 1.1754644881109841, 1.2460910014257673, 0.3017243850845283, 0.6578204644583511, 0.7333874845281185, 0.2825699374916846, -0.16331020192405687, 0.6355163076770298, 0.7921690615107435, 0.7027825106000617, 0.34520547605275503, 1.3231854152027722, 1.2780413558569077, 1.3231854152027722, 0.7333874845281185, -2.090509428834041, 0.951630515304787, 0.29988488122962315, 0.12071574436697774, -0.4265134388779125, 1.1054108013209398, 0.43165671123884497, -0.009500855159742194, 0.5726063189387971, 0.09411955864213739, -0.0012392825049811762, -0.4876669660399293, 1.0313553137104763, -0.21041924104974585, 0.8884475386617929, 0.5168398821485416, 0.9865841550054679, 1.9930998225084942, 0.7208235935603422, 0.6218328602589092, 0.7677041676576506, 0.03290260545248985, 0.23899143115029248, 0.4773876887370954, 0.6673915729058258, 1.6702733118097493, 0.5333395279534604, 1.0634312045388201, 1.2429981049000205, 0.8098374284723565, 0.5161657221757063, 0.7877721791169945, -1.2726989583049806, 0.6738894232726139, 0.2408685922142581, 1.5645545093221065, 0.29988488122962315, 0.5122357265399238, -0.037888413746646754, -0.7418806695849769, 0.1976441505947904, 0.556313016264472, 0.6504099029454811, 0.5650492551028407, 6.908982155410934, 1.8763351848680527, 0.7877721791169945, -0.6981180937487832, 1.235077497362762, 1.1498185707463218, 0.5511747284152433, 1.298041849629281, 0.9221980573053162, 1.157840889378262, 0.7085728287900658, 1.1650815529920844, 0.24590366883585052, -0.7654740398838877, 0.27176083786228655, 0.342149665272694, -0.7031736819495658, 0.24741356196938175, -0.0770878817472318, 0.09383702541374478, 1.157840889378262, 0.6664490089708683, 0.33567977862996434, 1.1498185707463218, 0.570059569307911, 0.43165671123884497, 0.8601320147700311, 0.16751166759227598, 0.7495903006196, 0.4880847908715347, 0.5388599630102242, -1.0862894443447024, 1.4578567468701549, -1.4093769974126709, 0.09383702541374478, -1.1127674924606954, -1.051248984812099, 0.951630515304787, 1.2219813022649282, 2.003674788500864, 0.22094816784817095, 1.152843101614828, 0.5323135338388341, 0.7495903006196, 1.4299830420709476, 0.6839999109322725, 1.7369263248188986, 0.7085728287900658, 0.5469963125944877, 0.26784454827545895, 0.5209930127747207, -0.4876669660399293, 0.26253657403086256, 1.2037488275715411, 0.3835069874759556, 1.1966976062896895, 1.2780413558569077, 0.3470305685224508, -0.2849282569468984, -0.6324685613286687, 0.03290260545248985, 1.469670047391674, -0.1826152025599156, -0.13546228575023467, 0.3526593375793285, 0.6673915729058258, 1.8108881626519686, 0.9189326743484698, 0.027464160006653193, 0.6830760627914708, -1.4591014246971583, 0.39712290896113334, 0.17656247947296277, 0.6689611362242045, 0.6795308966538931, 1.4299830420709476, 1.298041849629281, 0.09383702541374478, 0.8339430091984605, 0.496407205125765, 0.6665567395389872, 1.157800338720555, 0.6830760627914708, 0.18751505881379033, 0.5377060741678426, 0.7997303591575717, 0.09383702541374478, 0.22528187390265064, 0.8339430091984605, 0.17725936968873895, 1.0238366869252378, 0.6795308966538931, 0.5578961319923945, 0.2841825471389525, 0.5388599630102242, 0.5979240350747622, 0.29310822130176534, 0.6022300271461932, 1.0238366869252378, 0.27346529352376203, 0.8339430091984605, 0.5469963125944877, 0.5458607817481406, 0.6093164672163949, 0.8417189251982404, 1.3557704643519288, 0.8098374284723565, 0.7010174211081355, 1.1054108013209398, 0.5627320460225615, 0.4855301895826042, 0.5113681421757479, 0.7582625715275663, 0.570059569307911, 0.6903677939315982, -0.31284854474929846, 0.6958144071858444, 0.4990862960957385, 1.1966976062896895, 0.22528187390265064, 0.16751166759227598, -0.5517586712333844, 0.5550568524047195, 0.6629103228975289, 0.22528187390265064, 0.6698573465148328, 1.188257587345134, 0.6021688771352286, -0.21041924104974585, 0.5704690477244367, 0.4623114817605221, 0.8057921480198685, 1.469670047391674, 1.4716967575902586, 0.6107028324271065, 1.1966976062896895, 0.4530291899112895, 0.5469963125944877, 0.6958144071858444, 0.520863143743416, -0.4265134388779125, 0.7010794031845082, 0.5618942251813271, 0.4952977460134459, -0.6889289896135085, 1.152843101614828, 1.298041849629281, 0.5876124703592869, -0.23242282846722917, 0.20531286107418062, 0.5727172936480537, 1.6157847324840902, 2.907908304148015, 0.24702759764727328, 1.157800338720555, -1.67193257060882, 0.24590366883585052, 2.5939740692838518, 0.7921690615107435, -0.4876669660399293, 0.9172454338503386, -0.16331020192405687, 1.152843101614828, 0.2555832259965591, 0.26784454827545895, 0.23446407261048635, -0.2602509908332512, 0.27335200149663297, 1.0517544834671253, -0.2602509908332512, 0.5627613259648608, 0.18751505881379033, 0.44282529756230526, 0.12071574436697774, 0.2555832259965591, -0.6590279164289745, 0.19953844641616197, 0.06198993344903814, 1.235077497362762, 0.6830760627914708, 1.1864506859042159, 1.1504628352087243, 0.24590366883585052, 0.7331764364713614, 0.7333874845281185, 0.25531004999898843, 0.6770489804770461, 2.2286539852741836, 0.5529834653269566, -0.6590279164289745, -0.5517586712333844, 0.027464160006653193, -1.10940068966736, 0.6184558835997269, 0.6830760627914708, 1.6157847324840902, 1.8537201215160086, -0.09092098456346165, 0.5145476129411983, 2.907908304148015, 0.8884475386617929, 1.157800338720555, -1.3637560793364303, 0.20531286107418062, 1.9216730602436038, -1.1754379388797451, 1.7280633407738049, 0.4530291899112895, 0.27176083786228655, 1.3557704643519288, 0.5926478870129904, 0.5458607817481406, 0.6698573465148328, 0.6462961326893316, 0.4490790500550368, 0.12389612906067493, -0.7316245802074244, 1.7280633407738049, -0.2849282569468984, 0.2555546358906726, 0.30662859133012166, -1.10940068966736, -0.11203479440563802, 0.1513627381793753, 1.4299830420709476, -1.3637560793364303, 0.316471091016155, 1.3913553088164123, 0.9189326743484698, 0.7010174211081355, 2.2286539852741836, -0.7316245802074244, -0.09092098456346165, -1.0528676737699856, 0.5469963125944877, 0.5205781688486502, 1.3557704643519288, 0.5388599630102242, 2.4970239249656103, 0.7890577838110091, 0.569468067231541, 1.1054108013209398, 0.707734002965176, 0.582889642665204, 0.5924462519214988, 0.31336272646699886, 0.12389612906067493, 0.5398084047675593, 0.524838889815776, 0.12071574436697774, -0.1188807799814603, 1.157800338720555, -0.009500855159742194, -0.9177981392875942, 0.38796580279335424, 0.3328012632787578, 0.2555832259965591, 0.18751505881379033, 0.4833387398216415, 0.7677041676576506, 0.25531004999898843, -0.2602509908332512, 0.6830760627914708, 0.6868248601333952, 1.0634312045388201, 0.5158847441301853, 0.6868248601333952, 1.0354147190562704, 1.1504116316024595, 0.6738894232726139, 1.9657430667499052, 0.9392106032923562, 0.6868248601333952, 0.5782652433962538, 0.5360670185294262, 0.3017243850845283, 1.2004929682530752, 0.7333874845281185, 0.24590366883585052, 0.268195541037482, 0.7877721791169945, 1.3913553088164123, 0.26272630957462406, 0.06458034360049036, 1.3166576091346271, 1.1864506859042159, 1.2037488275715411, 1.3913553088164123, 0.5420759534065184, 0.18172352279145693, 1.6922267883132152, 0.39712290896113334, 1.235077497362762, 0.402487412674072, 0.5745118164031943, 0.531824332565019, 0.7877721791169945, 1.2429981049000205, 0.5329008407138264, 0.5331041627637391, 1.2460910014257673, -1.8633474153085043, -0.4590622925672925, 0.7333874845281185, 0.24702759764727328, 1.1864506859042159, 1.4716967575902586, -0.618831647933002, 1.2555335571741397, 0.268195541037482, 0.17656247947296277, 0.25842912277413355, 1.1504628352087243, 0.8098374284723565, 0.19953844641616197, 1.188257587345134, -0.6590279164289745, 0.03290260545248985, 0.5331041627637391, 1.4716967575902586, 0.5646540263777222, 0.5646540263777222, 0.7190526259084816, 0.03345188614068073, 0.8339430091984605, 0.027464160006653193, -0.23242282846722917, 0.24466042102050983, 0.6673915729058258, 0.8098374284723565, 0.5359310093903553, -0.0770878817472318, 0.9865841550054679, 0.536336998767568, 0.844290762968751, 0.5326092982435015, 0.268195541037482, 1.1504116316024595, 0.5312542073013647, 0.707734002965176, 0.5783386795952448, 0.5329008407138264, 0.3785501626520088, 0.5323135338388341, 0.5360670185294262, 0.4710686328468577, 0.18751505881379033, -0.9678422476625821, 0.23446407261048635, 0.2555546358906726, -0.31284854474929846, 0.556313016264472, -1.9801939960587405, 0.7877721791169945, 0.7495903006196, 0.5344611294939865, 0.5193373633530692, 0.6698573465148328, 0.6723296404630493, 1.2460910014257673, -1.141108024146438, 0.1575430131500994, 0.569468067231541, 0.31748167520393145, 1.0573472887804052, 0.7877721791169945, 0.5377060741678426, 0.27346529352376203, 0.26272630957462406, 0.5511747284152433, 0.27146405525562395, 0.5331977748442716, 0.27176083786228655, 0.027464160006653193, 0.19587238221982406, -0.39820489552220606, 0.316471091016155, -1.5657230448067427, 0.5511747284152433, 1.4299830420709476, 1.157840889378262, -0.010444320007734875, 0.2250070032096927, 0.9189326743484698, 0.5876124703592869, 0.1976441505947904, -0.6889289896135085, 0.29310822130176534, 0.7877721791169945, 1.1054108013209398, -0.6603756534745651, 1.9912126305383464, 0.8884475386617929, -0.2849282569468984, 0.31748167520393145, 0.20236623343678978, 0.7677041676576506, 0.27335200149663297, -1.2326063922666648, 0.09411955864213739, 0.24590366883585052, 0.28196699866312835, 0.5646540263777222, 0.6669865612352359, 0.22094816784817095, 0.5378688256685867, 0.31336272646699886, 0.31547008179200053, -1.2679124527187462, -0.8859886523495033, 0.8601320147700311, 0.31782970943689115, 0.5460280634311748, 0.6698573465148328, 0.24702759764727328, -0.39820489552220606, 1.022731242217012, 0.23446407261048635, 0.7333874845281185, 0.8098374284723565, 0.7065426312859652, 1.2037488275715411, 0.5344611294939865, 0.880635810892655, 0.6312521430454016, 0.6218328602589092, 0.5507593865589179, -1.0616663764877758, 0.6355163076770298, 0.7027825106000617, 0.5237119068582563, 1.4299830420709476, 0.6169964937693201, 0.25531004999898843, -1.2248284685601363, 0.5876124703592869, 0.8339430091984605, 0.5926478870129904, -0.1188807799814603, 0.12389612906067493, -0.4265134388779125, 0.27346529352376203, -0.5517586712333844, -1.1754379388797451, 1.165326436394366, 0.22961600136043375, 0.2555832259965591, 0.23691278245772895, -0.8213560008177538, 0.5281217364513294, 0.8098374284723565, 0.31336272646699886, 0.571515167262247, 0.03290260545248985, 0.6231607138386466, 0.669000312210224, 0.12071574436697774, 0.6673915729058258, 1.0271070240083071, 1.7369263248188986, 0.2708790131465811, 0.5388599630102242, 0.9915078867698277, -0.4590622925672925, 0.29310822130176534, 0.5208970291409079, 0.955886899484407, 1.0092698790555779, 0.31336272646699886, 0.6795308966538931, 0.5679214674712837, 1.8537201215160086, 0.6346537222615518, 0.4374563894338883, 0.31748167520393145, 3.561288399631392, 0.42595133022717635, 0.5476247092752315, 0.06458034360049036, -0.7320764393038872, 0.5627320460225615, 0.21333895726863022, 0.16751166759227598, -3.3298545426058554, 0.2555832259965591, 0.6958144071858444, 0.9737576268150241, -0.8383691418160795, 1.421753326398226, 1.5976661582737242, 0.5244769645619693, 0.6355163076770298, 0.6689611362242045, 0.2708790131465811, 1.6157847324840902, 0.06198993344903814, 1.000448223538914, 0.3328012632787578, 0.2555546358906726, -0.618831647933002, 0.2121779654567632, 0.7190526259084816, -0.7654740398838877, -0.31284854474929846, -0.8086587706213404, 0.31748167520393145, -1.2934385315185777, -0.17956639554005793, 0.17725936968873895, -1.1127674924606954, 0.22594623736082536, 0.09383702541374478, 1.1746325163256435, 0.6795308966538931, -0.0012392825049811762, 0.531824332565019, 0.19953844641616197, 0.6830760627914708, 1.05109708347239, 1.2668423289515425, 0.7495903006196, 0.5333395279534604, 0.03727683276866056, 0.6673915729058258, 0.9011078107465663, 1.1054108013209398, -0.1188807799814603, -1.1754379388797451, -1.5657230448067427, 1.3557704643519288, 0.316471091016155, 0.7732002271553338, 1.4537614296681518, 0.5281217364513294, 0.22961600136043375, 0.08605755509136331, 0.5347264551194819, 0.4858093065545907, 0.6988810804227048, 1.152843101614828, 0.6689611362242045, -0.618831647933002, 0.6903677939315982, 0.5729055646225473, 0.20531286107418062, 1.3557704643519288, 0.570059569307911, 0.29874398932307655, 0.44907542398431255, -2.6536904574635694, 1.298041849629281, -0.037888413746646754, 0.5767493336541247, 1.2219813022649282, 0.5783386795952448, 0.30846152231469814, 0.5924462519214988, 0.5683948883997496, 0.6689611362242045, -0.0012392825049811762, 0.7333874845281185, 1.2668423289515425, 0.12071574436697774, 0.28196699866312835, 0.5232235799587138, 1.3913553088164123, 0.09383702541374478, 1.9930998225084942, -0.31284854474929846, 1.157840889378262, 0.6738894232726139, 0.18590210179202304, 1.2037488275715411, 0.22094816784817095, 0.6371009453030447, 0.5950963501716207, -0.0012392825049811762, 0.09411955864213739, 0.7190526259084816, -0.7316245802074244, 0.6738894232726139, 0.31748167520393145, 0.36916642053516513, -1.4630119122075196, 0.6665567395389872, -1.2679124527187462, 0.5331977748442716, 0.5331977748442716, -0.6517880125624567, 0.30662859133012166, 0.25531004999898843, 0.1458942022596058, 0.5360670185294262, 0.8339430091984605, 0.24702759764727328, 0.5312542073013647, 0.6903677939315982, 0.5344639672038253, 0.5749840753469807, -3.0833906387973764, 0.5904187139510695, 0.31748167520393145, 0.5331041627637391, 1.1504116316024595, 0.6664490089708683, 0.29310822130176534, 1.4299830420709476, 0.8339430091984605, 0.531824332565019, -0.23242282846722917, 0.6689611362242045, 0.19953844641616197, 1.165326436394366, 1.3231854152027722, 1.3913553088164123]
   dataSplit2 = 50
   
   allFeatures2 = [guesses]
   
   X2 = []
   for i in range(len(guesses)): 
      X2.append([])
      for c in range(0, len(allFeatures2)):  
         X2[i].append(int(allFeatures2[c][i]))
      
   X2 = np.array(X2)
   X2 = preprocessing.scale(X2)
   
   n2 = NeuralNetwork(1)
   
   
   n2.train(X2[dataSplit:dataSplit2], y[dataSplit:dataSplit2], 10)
   #print(len(y[dataSplit:dataSplit2]))
   #print(n2.think(np.array(X2[76])))
   guessesWithBiRads = []
   resultForTrainingWithBiRads = []
   for i in range(0, len(guesses)): 
      guessesWithBiRads.append(int(n2.think(np.array(X2[i])).round()))
      resultForTrainingWithBiRads.append(int(y[dataSplit+i]))
   
   right = 0
   total = 0
   for i in range(len(guessesWithBiRads)):
      if((guessesWithBiRads[i] == resultForTrainingWithBiRads[i]) and resultForTrainingWithBiRads[i] == 1): 
         right += 1
      if(resultForTrainingWithBiRads[i] == 1):  
         total += 1
   
   totalN = 0
   rightN = 0
   for i in range(len(guessesWithBiRads)):
      if((guessesWithBiRads[i] == resultForTrainingWithBiRads[i]) and resultForTrainingWithBiRads[i] == 0): 
         rightN += 1
      if(resultForTrainingWithBiRads[i] == 0):  
         totalN += 1
         
   print("")
   #print("Overall accuracy - NO BiRads: " + str(accuracy_score(guesses,y[dataSplit:])*100) + "%")
   #print("Positive Accuracy - NO BiRads: " + str(getPositiveAccuracy(guesses)*100) + "%")
   #print("Negative Accuracy - NO BiRads: " + str(getNegativeAccuracy(guesses)*100) + "%") Dont know if this is right because guesses isn't from neural network
   print("Overall accuracy - BiRads: " + str(accuracy_score(guessesWithBiRads,resultForTrainingWithBiRads)*100) + "%")
   print("Positive Accuracy - BiRads: " + str(float(right)/float(total)*100) + "%")
   print("Negative Accuracy - BiRads: " + str(float(rightN)/float(totalN)*100) + "%")
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   '''
   
   Plot receiver operating characteristic.
  
   Calculate area under ROC as test of performance 
   
   '''
